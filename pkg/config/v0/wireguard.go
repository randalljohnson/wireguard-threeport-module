// generated by 'threeport-sdk gen' but will not be regenerated - intended for modification

package v0

import (
	"fmt"
	api_v0 "github.com/randalljohnson/wireguard-threeport-module/pkg/api/v0"
	client_v0 "github.com/randalljohnson/wireguard-threeport-module/pkg/client/v0"
	tpapi_v0 "github.com/threeport/threeport/pkg/api/v0"
	util "github.com/threeport/threeport/pkg/util/v0"
	"net/http"
)

// WireguardConfig contains the config for a wireguard which is an abstraction
// of a wireguard definition and wireguard instance.
type WireguardConfig struct {
	Wireguard WireguardValues `yaml:"Wireguard"`
}

// WireguardValues contains the attributes needed to manage a wireguard
// definition and wireguard instance with a single operation.
type WireguardValues struct {
	Name *string `yaml:"Name"`
}

// Create creates a wireguard definition and instance in the Threeport API.
func (w *WireguardValues) Create(
	apiClient *http.Client,
	apiEndpoint string,
) (*api_v0.WireguardDefinition, *api_v0.WireguardInstance, error) {
	// get operations
	operations, createdWireguardDefinition, createdWireguardInstance := w.GetOperations(
		apiClient,
		apiEndpoint,
	)

	// execute create operations
	if err := operations.Create(); err != nil {
		return nil, nil, fmt.Errorf(
			"failed to execute create operations for wireguard defined instance with name %s: %w",
			w.Name,
			err,
		)
	}

	return createdWireguardDefinition, createdWireguardInstance, nil
}

// Delete deletes a wireguard definition and instance from the Threeport API.
func (w *WireguardValues) Delete(
	apiClient *http.Client,
	apiEndpoint string,
) (*api_v0.WireguardDefinition, *api_v0.WireguardInstance, error) {
	// get operations
	operations, _, _ := w.GetOperations(
		apiClient,
		apiEndpoint,
	)

	// execute delete operations
	if err := operations.Delete(); err != nil {
		return nil, nil, fmt.Errorf(
			"failed to execute delete operations for wireguard defined instance with name %s: %w",
			w.Name,
			err,
		)
	}

	return nil, nil, nil
}

// GetOperations returns a slice of operations used to create or delete a
// wireguard defined instance.
func (w *WireguardValues) GetOperations(
	apiClient *http.Client,
	apiEndpoint string,
) (*util.Operations, *api_v0.WireguardDefinition, *api_v0.WireguardInstance) {
	var err error
	var createdWireguardDefinition api_v0.WireguardDefinition
	var createdWireguardInstance api_v0.WireguardInstance

	operations := util.Operations{}

	// add wireguard definition operation
	wireguardDefinitionValues := WireguardDefinitionValues{
		Name: w.Name,
	}
	operations.AppendOperation(util.Operation{
		Create: func() error {
			wireguardDefinition, err := wireguardDefinitionValues.Create(apiClient, apiEndpoint)
			if err != nil {
				return fmt.Errorf("failed to create wireguard definition with name %s: %w", w.Name, err)
			}
			createdWireguardDefinition = *wireguardDefinition
			return nil
		},
		Delete: func() error {
			_, err = wireguardDefinitionValues.Delete(apiClient, apiEndpoint)
			if err != nil {
				return fmt.Errorf("failed to delete wireguard definition with name %s: %w", w.Name, err)
			}
			return nil
		},
		Name: "wireguard definition",
	})

	// add wireguard instance operation
	wireguardInstanceValues := WireguardInstanceValues{
		Name: w.Name,
	}
	operations.AppendOperation(util.Operation{
		Create: func() error {
			wireguardInstance, err := wireguardInstanceValues.Create(apiClient, apiEndpoint)
			if err != nil {
				return fmt.Errorf("failed to create wireguard instance with name %s: %w", w.Name, err)
			}
			createdWireguardInstance = *wireguardInstance
			return nil
		},
		Delete: func() error {
			_, err = wireguardInstanceValues.Delete(apiClient, apiEndpoint)
			if err != nil {
				return fmt.Errorf("failed to delete wireguard instance with name %s: %w", w.Name, err)
			}
			return nil
		},
		Name: "wireguard instance",
	})

	return &operations, &createdWireguardDefinition, &createdWireguardInstance
}

// WireguardDefinitionConfig contains the config for a wireguard definition.
type WireguardDefinitionConfig struct {
	WireguardDefinition WireguardDefinitionValues `yaml:"WireguardDefinition"`
}

// WireguardDefinitionValues contains the attributes for the wireguard definition
// config abstraction.
type WireguardDefinitionValues struct {
	Name *string `yaml:"Name"`
}

// Create creates a wireguard definition in the Threeport API.
func (w *WireguardDefinitionValues) Create(
	apiClient *http.Client,
	apiEndpoint string,
) (*api_v0.WireguardDefinition, error) {
	// validate config
	// TODO

	// construct wireguard definition object
	wireguardDefinition := api_v0.WireguardDefinition{
		Definition: tpapi_v0.Definition{
			Name: w.Name,
		},
	}

	// create wireguard definition
	createdWireguardDefinition, err := client_v0.CreateWireguardDefinition(
		apiClient,
		apiEndpoint,
		&wireguardDefinition,
	)
	if err != nil {
		return nil, fmt.Errorf("failed to create wireguard definition in threeport API: %w", err)
	}

	return createdWireguardDefinition, nil
}

// Delete deletes a wireguard definition from the Threeport API.
func (w *WireguardDefinitionValues) Delete(
	apiClient *http.Client,
	apiEndpoint string,
) (*api_v0.WireguardDefinition, error) {
	// get wireguard definition by name
	wireguardDefinition, err := client_v0.GetWireguardDefinitionByName(
		apiClient,
		apiEndpoint,
		*w.Name,
	)
	if err != nil {
		return nil, fmt.Errorf("failed to find wireguard definition with name %s: %w", w.Name, err)
	}

	// delete wireguard definition
	deletedWireguardDefinition, err := client_v0.DeleteWireguardDefinition(
		apiClient,
		apiEndpoint,
		*wireguardDefinition.ID,
	)
	if err != nil {
		return nil, fmt.Errorf("failed to delete wireguard definition from Threeport API: %w", err)
	}

	return deletedWireguardDefinition, nil
}

// WireguardInstanceConfig contains the config for a wireguard instance.
type WireguardInstanceConfig struct {
	WireguardInstance WireguardInstanceValues `yaml:"WireguardInstance"`
}

// WireguardInstanceValues contains the attributes for the wireguard instance
// config abstraction.
type WireguardInstanceValues struct {
	Name *string `yaml:"Name"`
}

// Create creates a wireguard instance in the Threeport API.
func (w *WireguardInstanceValues) Create(
	apiClient *http.Client,
	apiEndpoint string,
) (*api_v0.WireguardInstance, error) {
	// validate config
	// TODO

	// construct wireguard instance object
	wireguardInstance := api_v0.WireguardInstance{
		Instance: tpapi_v0.Instance{
			Name: w.Name,
		},
	}

	// create wireguard instance
	createdWireguardInstance, err := client_v0.CreateWireguardInstance(
		apiClient,
		apiEndpoint,
		&wireguardInstance,
	)
	if err != nil {
		return nil, fmt.Errorf("failed to create wireguard instance in threeport API: %w", err)
	}

	return createdWireguardInstance, nil
}

// Delete deletes a wireguard instance from the Threeport API.
func (w *WireguardInstanceValues) Delete(
	apiClient *http.Client,
	apiEndpoint string,
) (*api_v0.WireguardInstance, error) {
	// get wireguard instance by name
	wireguardInstance, err := client_v0.GetWireguardInstanceByName(
		apiClient,
		apiEndpoint,
		*w.Name,
	)
	if err != nil {
		return nil, fmt.Errorf("failed to find wireguard instance with name %s: %w", w.Name, err)
	}

	// delete wireguard instance
	deletedWireguardInstance, err := client_v0.DeleteWireguardInstance(
		apiClient,
		apiEndpoint,
		*wireguardInstance.ID,
	)
	if err != nil {
		return nil, fmt.Errorf("failed to delete wireguard instance from Threeport API: %w", err)
	}

	return deletedWireguardInstance, nil
}
