// generated by 'threeport-sdk gen' but will not be regenerated - intended for modification

package cmd

import (
	"fmt"
	api_v0 "github.com/randalljohnson/wireguard-threeport-module/pkg/api/v0"
	util "github.com/threeport/threeport/pkg/util/v0"
	"net/http"
	"os"
	"text/tabwriter"
)

// outputGetWireguardsCmd produces the tabular output for the
// 'tptctl get wireguards' command.
func outputGetWireguardsCmd(
	v0wireguardInstances *[]api_v0.WireguardInstance,
	apiClient *http.Client,
	apiEndpoint string,
) error {
	writer := tabwriter.NewWriter(os.Stdout, 4, 4, 4, ' ', 0)
	fmt.Fprintln(writer, "VERSION\t NAME\t AGE")
	for _, wireguardInstance := range *v0wireguardInstances {
		fmt.Fprintln(
			writer,
			"v0", "\t",
			*wireguardInstance.Name, "\t",
			util.GetAge(wireguardInstance.CreatedAt),
		)
	}
	writer.Flush()

	return nil
}

// outputGetv0WireguardDefinitionsCmd produces the tabular output for the
// 'tptctl get wireguard-definitions' command.
func outputGetv0WireguardDefinitionsCmd(
	wireguardDefinitions *[]api_v0.WireguardDefinition,
	apiClient *http.Client,
	apiEndpoint string,
) error {
	writer := tabwriter.NewWriter(os.Stdout, 4, 4, 4, ' ', 0)
	fmt.Fprintln(writer, "NAME\t AGE")
	for _, wireguardDefinition := range *wireguardDefinitions {
		fmt.Fprintln(
			writer,
			*wireguardDefinition.Name, "\t",
			util.GetAge(wireguardDefinition.CreatedAt),
		)
	}
	writer.Flush()

	return nil
}

// outputGetv0WireguardInstancesCmd produces the tabular output for the
// 'tptctl get wireguard-instances' command.
func outputGetv0WireguardInstancesCmd(
	wireguardInstances *[]api_v0.WireguardInstance,
	apiClient *http.Client,
	apiEndpoint string,
) error {
	writer := tabwriter.NewWriter(os.Stdout, 4, 4, 4, ' ', 0)
	fmt.Fprintln(writer, "NAME\t AGE")
	for _, wireguardInstance := range *wireguardInstances {
		fmt.Fprintln(
			writer,
			*wireguardInstance.Name, "\t",
			util.GetAge(wireguardInstance.CreatedAt),
		)
	}
	writer.Flush()

	return nil
}
